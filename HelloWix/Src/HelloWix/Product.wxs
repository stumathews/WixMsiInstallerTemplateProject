<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
	<Product Id="*" Name="HelloWix" Language="1033" 
           Version="1.0.0.0" 
           Manufacturer="StuOrg" 
           UpgradeCode="0b57ad7b-48a8-42ba-a851-eb6a5f8cfa62">
    
		<Package InstallerVersion="200" Compressed="yes" InstallScope="perMachine" />

    <!-- Shown if the user tries to install a older version of this package -->
		<MajorUpgrade AllowDowngrades="no" DowngradeErrorMessage="A newer version of [ProductName] is already installed." />
    
    <!-- Automatically assignes files to cab files. EmbedCab will embed the cab files into the msi file which is more self-contained -->
		<MediaTemplate EmbedCab="yes" />
  

    <!-- UIRef needs the WixUIExtension.dll to be referenced in the wix vs studio project-->
    <!--<UIRef Id="WixUI_Minimal"/>-->
    <UIRef Id="WixUI_FeatureTree"/>
    <!--<UIRef Id="WixUI_Advanced"/>-->
    
     <!-- Wix UI customizations -->
    <WixVariable Id="WixUILicenseRtf" Value="license.rtf"/>
    <WixVariable Id="WixUIDialogBmp" Value="dlgbmp.bmp"/>
    
    <PropertyRef Id="NETFRAMEWORK45"/>
    
    <!-- Setup Target:-->
    
    <!-- Components must be assigned to a feature to be installed. -->
		<Feature Id="ProductFeature" Title="Product Files" 
             Description="My feature is so cool" 
             Level="1"
             Absent="disallow"
             AllowAdvertise="no"> <!-- sets the InstallLevel property. 1 means feature is installed locally. 0 means feature is disabled.
             absent=disallow means the feature cannot be disabled-->
			<ComponentGroupRef Id="ProductComponents" /> <!-- OR secific component as: <ComponentRef Id="MyComponentId"/> -->
      <ComponentRef Id="UninstallShortcut"/>
      <Feature Id="ModuleA" Title="Module A" >
        <ComponentRef Id="ModuleA"/>
      </Feature>
      <Feature Id="ModuleB" Title="Module B" >
        <ComponentRef Id="ModuleB"/>
      </Feature>
      <Feature Id="ModuleC" Title="Module C" >
        <ComponentRef Id="ModuleC"/>
      </Feature>
		</Feature>
    
    <Feature Id="DocumentationFeature" Title="Documentation" >
      <ComponentGroupRef Id="Docs" />
    </Feature>
    
    <Condition Message="Foo folder must exist in c:\">
      <![CDATA[Installed OR FOOFOLDER]]>
    </Condition>
    
    <Condition Message="Need .NET framwork 4.5. Please install it first">
      <![CDATA[Installed OR NETFRAMEWORK45]]>
    </Condition>
    
    <CustomAction Id="MyCustomActionId" Property="Foo" Value="[INSTALLFOLDER]"/> <!-- Set Foo property to whatever the user typed/specified  (Type 51 Custom Action)--> 
    <InstallExecuteSequence>
      <Custom Action="MyCustomActionId" After="CostFinalize" >
        <![CDATA[NOT Installed]]>
      </Custom>
    </InstallExecuteSequence>
    
    <SetProperty Id="Foo" Value="[INSTALLFOLDER]" Sequence="execute" After="CostFinalize">  <!-- This is equavalent to the above type 51 custom action  -->
      <![CDATA[NOT Installed]]> <!-- Condition for this custom action -->
    </SetProperty>
	</Product>

	<Fragment>
    
    <Icon Id="appicon.ico" SourceFile="app.ico" />
    
    
    <!-- Directories moved to Directories.wxs -->
    <!-- Component definitions moved to Componnets.wxs -->
    
    <Property Id="FOOFOLDER">
      <DirectorySearch Id="SearchDirFoo" Path="c:\foo"/>
    </Property>
    
    <Property Id="WINDOWSVERSION">
      <RegistrySearch Id="winver" Root="HKLM" Key="SOFTWARE\Microsoft\Windows NT\CurrentVersion" Name="CurrentVersion" Type="raw"/>
    </Property>
    
	</Fragment>
</Wix>
